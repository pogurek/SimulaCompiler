package simulaTestBatch;
// Simula-1.0 Compiled at Mon May 27 11:20:07 CEST 2019
import simula.runtime.*;
@SuppressWarnings("unchecked")
public final class simtst04$ extends BASICIO$ {
    public int prefixLevel() { return(0); }
    int found_error=0;
    boolean verbose=false;
    TXT$ txt=null;
    int intr=0;
    int sho=0;
    float rea=0.0f;
    double lon=0.0d;
    int realprecision=0;
    int longprecision=0;
    public simtst04$(RTObject$ staticLink) {
        super(staticLink);
        BBLK();
        BPRG("simtst04$");
    }
    public RTObject$ STM$() {
        if(VALUE$(verbose)) {
            {
                sysout().outtext(new TXT$("--- START Simula a.s. TEST 4"));
                sysout().outimage();
                sysout().outtext(new TXT$("--- Test reading numbers from source text"));
                sysout().outimage();
                sysout().outimage();
            }
        }
        txt=blanks(30);
        realprecision=7;
        longprecision=16;
        TXT$.putint(txt,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (1)."),txt,new TXT$("                             7"));
        TXT$.putint(txt,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (2)."),txt,new TXT$("                            16"));
        intr=123456;
        TXT$.putint(txt,intr);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (3)."),txt,new TXT$("                        123456"));
        intr=((ENVIRONMENT$)CTX$).maxint;
        TXT$.putint(txt,intr);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (4)."),txt,new TXT$("                    2147483647"));
        TXT$.putint(txt,0);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (6)."),txt,new TXT$("                             0"));
        intr=((ENVIRONMENT$)CTX$).minint;
        TXT$.putint(txt,intr);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (7)."),txt,new TXT$("                   -2147483648"));
        TXT$.putint(txt,(-(0)));
        new simtst04$$test(((simtst04$)CUR$),new TXT$("integer operation (8)."),txt,new TXT$("                             0"));
        TXT$.putint(txt,sho);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("short integer operation (1)."),txt,new TXT$("                             0"));
        sho=32767;
        TXT$.putint(txt,sho);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("short integer operation (2)."),txt,new TXT$("                         32767"));
        sho=13;
        TXT$.putint(txt,sho);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("short integer operation (4)."),txt,new TXT$("                            13"));
        sho=(-(32768));
        TXT$.putint(txt,sho);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("short integer operation (5)."),txt,new TXT$("                        -32768"));
        rea=((float)(123456));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (1)."),txt,new TXT$("                  1.234560&+05"));
        rea=3.4028235E38f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (2)."),txt,new TXT$("                  3.402823&+38"));
        rea=((float)((-(3))));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (3)."),txt,new TXT$("                 -3.000000&+00"));
        rea=0.8888889f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (4)."),txt,new TXT$("                  8.888889&-01"));
        rea=0.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (5)."),txt,new TXT$("                  0.000000&+00"));
        rea=(-(1.192093E-7f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (6)."),txt,new TXT$("                 -1.192093&-07"));
        rea=0.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (7)."),txt,new TXT$("                  0.000000&+00"));
        rea=1235.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (8)."),txt,new TXT$("                  1.235000&+03"));
        rea=(-(3.4028235E38f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (9)."),txt,new TXT$("                 -3.402823&+38"));
        rea=1000.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (10)."),txt,new TXT$("                  1.000000&+03"));
        TXT$.putreal(txt,1.0E20f,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (11)."),txt,new TXT$("                  1.000000&+20"));
        rea=1.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (12)."),txt,new TXT$("                  1.000000&+00"));
        TXT$.putreal(txt,1000000.0f,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (13)."),txt,new TXT$("                  1.000000&+06"));
        rea=10.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (14)."),txt,new TXT$("                  1.000000&+01"));
        TXT$.putreal(txt,1.0E-37f,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (15)."),txt,new TXT$("                  1.000000&-37"));
        rea=(-(100.0f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (16)."),txt,new TXT$("                 -1.000000&+02"));
        rea=(-(1.0E35f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (17)."),txt,new TXT$("                 -1.000000&+35"));
        rea=(-(0.01f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (18)."),txt,new TXT$("                 -1.000000&-02"));
        TXT$.putreal(txt,3.4028235E38f,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (19)."),txt,new TXT$("                  3.402823&+38"));
        rea=1.23456794E9f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (20)."),txt,new TXT$("                  1.234568&+09"));
        rea=3.333E-5f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (21)."),txt,new TXT$("                  3.333000&-05"));
        rea=2.2222223E-38f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (22)."),txt,new TXT$("                  2.222222&-38"));
        rea=5.5555556E7f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (23)."),txt,new TXT$("                  5.555556&+07"));
        rea=(-(1.0E12f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (24)."),txt,new TXT$("                 -1.000000&+12"));
        rea=(-(0.0f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (25)."),txt,new TXT$("                  0.000000&+00"));
        rea=3333333.2f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (26)."),txt,new TXT$("                  3.333333&+06"));
        rea=7.777778E-11f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (27)."),txt,new TXT$("                  7.777778&-11"));
        rea=1.1111111E-5f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (28)."),txt,new TXT$("                  1.111111&-05"));
        rea=(-(0.6666667f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (29)."),txt,new TXT$("                 -6.666667&-01"));
        rea=1.192093E-9f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (30)."),txt,new TXT$("                  1.192093&-09"));
        rea=0.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (31)."),txt,new TXT$("                  0.000000&+00"));
        rea=1.2345678E32f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (32)."),txt,new TXT$("                  1.234568&+32"));
        rea=1.1111112f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (33)."),txt,new TXT$("                  1.111111&+00"));
        rea=1.2345679E-6f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (34)."),txt,new TXT$("                  1.234568&-06"));
        rea=(-(3.4028235E38f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (35)."),txt,new TXT$("                 -3.402823&+38"));
        rea=(-(300000.0f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("real operation (36)."),txt,new TXT$("                 -3.000000&+05"));
        lon=1.2345678912345678E16d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (1)."),txt,new TXT$("        1.234567891234568&+016"));
        lon=1.797693134862315E308d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (2)."),txt,new TXT$("        1.797693134862315&+308"));
        TXT$.putreal(txt,0.8888888888888888d,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (3)."),txt,new TXT$("        8.888888888888888&-001"));
        lon=((double)(0));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (4)."),txt,new TXT$("        0.000000000000000&+000"));
        lon=(-(2.220446049250313E-18d));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (5)."),txt,new TXT$("       -2.220446049250313&-018"));
        lon=1234.999999991111d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (6)."),txt,new TXT$("        1.234999999991111&+003"));
        lon=1000.0d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (7)."),txt,new TXT$("        1.000000000000000&+003"));
        TXT$.putreal(txt,1.0d,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (8)."),txt,new TXT$("        1.000000000000000&+000"));
        lon=10.0d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (9)."),txt,new TXT$("        1.000000000000000&+001"));
        TXT$.putreal(txt,1.797693134862315E308d,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (10)."),txt,new TXT$("        1.797693134862315&+308"));
        lon=1.23456789123456794E18d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (11)."),txt,new TXT$("        1.234567891234568&+018"));
        lon=(-(1.0E22d));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (12)."),txt,new TXT$("       -1.000000000000000&+022"));
        lon=7.0E-11d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (13)."),txt,new TXT$("        7.000000000000000&-011"));
        lon=1.1111111111111112E-5d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (14)."),txt,new TXT$("        1.111111111111111&-005"));
        lon=1.234567891111111E32d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (15)."),txt,new TXT$("        1.234567891111111&+032"));
        lon=(-(1.797693134862315E308d));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test(((simtst04$)CUR$),new TXT$("long real operation (16)."),txt,new TXT$("       -1.797693134862315&+308"));
        if(VALUE$((found_error>(0)))) {
            sysout().outint(found_error,4);
        } else
        sysout().outtext(new TXT$("--- NO"));
        sysout().outtext(new TXT$(" ERRORS FOUND IN TEST 4"));
        if(VALUE$(verbose)) {
            {
                sysout().outtext(new TXT$("--- END Simula a.s. TEST 4"));
                sysout().outimage();
            }
        }
        EBLK();
        return(null);
    }
    
    public static void main(String[] args) {
        RT.setRuntimeOptions(args);
        new simtst04$(CTX$).STM$();
    }
    public static PROGINFO$ INFO$=new PROGINFO$("simtst04.sim","SimulaProgram simtst04$",1,29,9,30,11,32,13,35,15,36,17,37,19,38,21,40,23,41,31,61,33,62,36,63,38,64,40,65,45,68,47,70,49,73,51,75,53,76,55,78,57,80,59,85,61,86,63,87,65,89,67,90,69,91,71,93,73,94,75,96,77,97,79,98,81,100,83,101,85,107,87,108,89,110,91,111,93,114,95,116,97,117,99,118,101,120,103,121,105,123,107,129,109,130,111,131,113,138,115,141,117,142,119,144,121,145,123,146,125,148,127,149,129,150,131,152,133,153,135,154,137,161,139,164,141,165,143,167,145,168,147,169,149,171,151,172,153,173,155,180,157,183,159,184,161,186,163,187,165,188,167,190,169,191,171,193,173,194,175,195,177,197,179,198,181,200,183,201,185,202,187,204,189,205,191,207,193,208,195,209,197,211,199,212,201,213,203,215,205,216,207,217,209,223,211,224,213,226,215,227,217,228,219,230,221,231,223,232,225,234,227,235,229,236,231,238,233,239,235,240,237,242,239,243,241,244,243,246,245,247,247,248,249,250,251,251,253,252,255,254,257,255,259,256,261,258,263,259,265,260,267,262,269,263,271,264,273,272,275,273,277,274,279,276,281,277,283,278,285,280,287,281,289,282,291,284,293,285,295,286,297,288,299,289,301,290,303,297,305,298,307,299,309,301,311,302,313,303,315,308,317,309,319,310,321,317,323,320,325,321,327,323,329,324,331,326,333,327,335,328,337,335,339,338,341,339,343,341,345,342,347,343,349,345,351,346,353,347,355,349,357,350,359,352,361,353,363,354,365,362,367,363,369,365,371,366,373,367,375,369,377,370,379,371,381,373,383,374,385,375,387,377,389,378,391,379,393,381,395,382,397,383,399,390,401,391,403,392,405,395,410,396,412,397,414,398,417,399,428,402);
}
