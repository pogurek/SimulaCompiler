begin
   ref(A) x;
   
   procedure trace(msg); text msg;
   begin
      outtext(msg); outimage; printThreadList;
   end;
   
   class A;
   begin
      integer i;
      trace("A: State 1(Initiating)");
      detach;     
      trace("A: State 2");
      detach;
      trace("A: State 3(Terminating)");
   end A;
   
   outtext("-----------------------------------------"); outimage;
   outtext("CoroutineSample -- Expected Output:"); outimage;
   outtext("-----------------------------------------"); outimage;
      outtext("Main: Before new A"); outimage;
      outtext("A: State 1(Initiating)"); outimage;
      outtext("Main: Before first call"); outimage;
      outtext("A: State 2"); outimage;
      outtext("Main: Before second call"); outimage;
      outtext("A: State 3(Terminating)"); outimage;
      outtext("Main: Before third call"); outimage;
   outtext("ERROR: Call(x): x is not in detached state."); Outimage;
   outtext("-----------------------------------------"); outimage;
   outtext("CoroutineSample -- Actual Output:"); outimage;
   outtext("-----------------------------------------"); outimage;
   
   begin
      trace("Main: Before new A");
      x:-new A();
      trace("Main: Before first call");
      call(x);
      trace("Main: Before second call");
      call(x);
      trace("Main: Before third call");
      call(x);
   end subBlock;
   
end program;