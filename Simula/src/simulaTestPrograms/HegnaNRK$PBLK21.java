package simulaTestPrograms;
// Simula-Beta-0.3 Compiled at Fri May 03 22:07:42 CEST 2019
import simula.runtime.*;
@SuppressWarnings("unchecked")
public final class HegnaNRK$PBLK21 extends Simset$ {
    public int prefixLevel() { return(0); }
    public boolean isQPSystemBlock() { return(true); }
    char eot$1=0;
    int skjerm_image_lengde$1=0;
    int navne_lengde$1=0;
    int tekst_lengde$1=0;
    InFile$ innbase$1=null;
    OutFile$ utbase$1=null;
    TXT$ fil_image$1=null;
    int fil_image_lengde$1=0;
    TXT$ innbase_navn$1=null;
    TXT$ utbase_navn$1=null;
    TXT$ default_file_type$1=null;
    int max_kommando$1=0;
    int quit_kommando$1=0;
    public ARRAY$<TXT$[]>kommando_tabell=null;
    int max_type$1=0;
    public ARRAY$<char[]>type_tabell=null;
    int antall_format_def$1=0;
    int max_format_def$1=0;
    int max_format_lengde$1=0;
    public ARRAY$<TXT$[]>formatnavn_tabell=null;
    public ARRAY$<HegnaNRK$PBLK21$format[]>format_peker=null;
    TXT$ formatnavn$1=null;
    int formatnr$1=0;
    int format_ark_lengde$1=0;
    public ARRAY$<int[]>format_fnr=null;
    public ARRAY$<int[]>format_spos=null;
    HegnaNRK$PBLK21$tabell_mengde mengde$1=null;
    int felt_antall$1=0;
    int max_intern_felt$1=0;
    public ARRAY$<HegnaNRK$PBLK21$verdi[]>intern_felt=null;
    public ARRAY$<int[]>intern_feltnr=null;
    int max_felt_def$1=0;
    int antall_felt_def$1=0;
    int quit_felt$1=0;
    public ARRAY$<int[]>felttype_tabell=null;
    public ARRAY$<TXT$[]>feltnavn_tabell=null;
    public ARRAY$<HegnaNRK$PBLK21$verdi[]>siste_felt_verdi_lest=null;
    int finne_regel_antall$1=0;
    int max_finne_regel$1=0;
    public ARRAY$<int[]>finnefeltnr=null;
    public ARRAY$<HegnaNRK$PBLK21$verdi[]>finnefeltpeker=null;
    TXT$ feltnavn$1=null;
    int feltnr$1=0;
    int felttype$1=0;
    HegnaNRK$PBLK21$verdi feltverdi$1=null;
    int aktuell$1=0;
    int max_antall_poster$1=0;
    int antall_poster$1=0;
    public ARRAY$<HegnaNRK$PBLK21$post[]>post_peker=null;
    float rest$1=0.0f;
    int antall_egenskaper$1=0;
    public ARRAY$<int[]>divisor=null;
    public ARRAY$<TXT$[]>egenskap=null;
    public HegnaNRK$PBLK21(RTObject$ staticLink) {
        super(staticLink);
        BPRG("HegnaNRK$PBLK21");
        int[] kommando_tabell$LB=new int[1]; int[] kommando_tabell$UB=new int[1];
        kommando_tabell$LB[0]=1; kommando_tabell$UB[0]=24;
        BOUND_CHECK$(kommando_tabell$LB[0],kommando_tabell$UB[0]);
        kommando_tabell=new ARRAY$<TXT$[]>(new TXT$[kommando_tabell$UB[0]-kommando_tabell$LB[0]+1],kommando_tabell$LB,kommando_tabell$UB);
        int[] type_tabell$LB=new int[1]; int[] type_tabell$UB=new int[1];
        type_tabell$LB[0]=1; type_tabell$UB[0]=8;
        BOUND_CHECK$(type_tabell$LB[0],type_tabell$UB[0]);
        type_tabell=new ARRAY$<char[]>(new char[type_tabell$UB[0]-type_tabell$LB[0]+1],type_tabell$LB,type_tabell$UB);
        int[] formatnavn_tabell$LB=new int[1]; int[] formatnavn_tabell$UB=new int[1];
        formatnavn_tabell$LB[0]=1; formatnavn_tabell$UB[0]=8;
        BOUND_CHECK$(formatnavn_tabell$LB[0],formatnavn_tabell$UB[0]);
        formatnavn_tabell=new ARRAY$<TXT$[]>(new TXT$[formatnavn_tabell$UB[0]-formatnavn_tabell$LB[0]+1],formatnavn_tabell$LB,formatnavn_tabell$UB);
        int[] format_peker$LB=new int[1]; int[] format_peker$UB=new int[1];
        format_peker$LB[0]=1; format_peker$UB[0]=8;
        BOUND_CHECK$(format_peker$LB[0],format_peker$UB[0]);
        format_peker=new ARRAY$<HegnaNRK$PBLK21$format[]>(new HegnaNRK$PBLK21$format[format_peker$UB[0]-format_peker$LB[0]+1],format_peker$LB,format_peker$UB);
        int[] format_fnr$LB=new int[1]; int[] format_fnr$UB=new int[1];
        format_fnr$LB[0]=1; format_fnr$UB[0]=16;
        BOUND_CHECK$(format_fnr$LB[0],format_fnr$UB[0]);
        format_fnr=new ARRAY$<int[]>(new int[format_fnr$UB[0]-format_fnr$LB[0]+1],format_fnr$LB,format_fnr$UB);
        int[] format_spos$LB=new int[1]; int[] format_spos$UB=new int[1];
        format_spos$LB[0]=1; format_spos$UB[0]=16;
        BOUND_CHECK$(format_spos$LB[0],format_spos$UB[0]);
        format_spos=new ARRAY$<int[]>(new int[format_spos$UB[0]-format_spos$LB[0]+1],format_spos$LB,format_spos$UB);
        int[] intern_felt$LB=new int[1]; int[] intern_felt$UB=new int[1];
        intern_felt$LB[0]=1; intern_felt$UB[0]=16;
        BOUND_CHECK$(intern_felt$LB[0],intern_felt$UB[0]);
        intern_felt=new ARRAY$<HegnaNRK$PBLK21$verdi[]>(new HegnaNRK$PBLK21$verdi[intern_felt$UB[0]-intern_felt$LB[0]+1],intern_felt$LB,intern_felt$UB);
        int[] intern_feltnr$LB=new int[1]; int[] intern_feltnr$UB=new int[1];
        intern_feltnr$LB[0]=1; intern_feltnr$UB[0]=16;
        BOUND_CHECK$(intern_feltnr$LB[0],intern_feltnr$UB[0]);
        intern_feltnr=new ARRAY$<int[]>(new int[intern_feltnr$UB[0]-intern_feltnr$LB[0]+1],intern_feltnr$LB,intern_feltnr$UB);
        int[] felttype_tabell$LB=new int[1]; int[] felttype_tabell$UB=new int[1];
        felttype_tabell$LB[0]=1; felttype_tabell$UB[0]=16+(1);
        BOUND_CHECK$(felttype_tabell$LB[0],felttype_tabell$UB[0]);
        felttype_tabell=new ARRAY$<int[]>(new int[felttype_tabell$UB[0]-felttype_tabell$LB[0]+1],felttype_tabell$LB,felttype_tabell$UB);
        int[] feltnavn_tabell$LB=new int[1]; int[] feltnavn_tabell$UB=new int[1];
        feltnavn_tabell$LB[0]=1; feltnavn_tabell$UB[0]=16+(1);
        BOUND_CHECK$(feltnavn_tabell$LB[0],feltnavn_tabell$UB[0]);
        feltnavn_tabell=new ARRAY$<TXT$[]>(new TXT$[feltnavn_tabell$UB[0]-feltnavn_tabell$LB[0]+1],feltnavn_tabell$LB,feltnavn_tabell$UB);
        int[] siste_felt_verdi_lest$LB=new int[1]; int[] siste_felt_verdi_lest$UB=new int[1];
        siste_felt_verdi_lest$LB[0]=1; siste_felt_verdi_lest$UB[0]=16+(1);
        BOUND_CHECK$(siste_felt_verdi_lest$LB[0],siste_felt_verdi_lest$UB[0]);
        siste_felt_verdi_lest=new ARRAY$<HegnaNRK$PBLK21$verdi[]>(new HegnaNRK$PBLK21$verdi[siste_felt_verdi_lest$UB[0]-siste_felt_verdi_lest$LB[0]+1],siste_felt_verdi_lest$LB,siste_felt_verdi_lest$UB);
        int[] finnefeltnr$LB=new int[1]; int[] finnefeltnr$UB=new int[1];
        finnefeltnr$LB[0]=1; finnefeltnr$UB[0]=8;
        BOUND_CHECK$(finnefeltnr$LB[0],finnefeltnr$UB[0]);
        finnefeltnr=new ARRAY$<int[]>(new int[finnefeltnr$UB[0]-finnefeltnr$LB[0]+1],finnefeltnr$LB,finnefeltnr$UB);
        int[] finnefeltpeker$LB=new int[1]; int[] finnefeltpeker$UB=new int[1];
        finnefeltpeker$LB[0]=1; finnefeltpeker$UB[0]=8;
        BOUND_CHECK$(finnefeltpeker$LB[0],finnefeltpeker$UB[0]);
        finnefeltpeker=new ARRAY$<HegnaNRK$PBLK21$verdi[]>(new HegnaNRK$PBLK21$verdi[finnefeltpeker$UB[0]-finnefeltpeker$LB[0]+1],finnefeltpeker$LB,finnefeltpeker$UB);
        int[] post_peker$LB=new int[1]; int[] post_peker$UB=new int[1];
        post_peker$LB[0]=1; post_peker$UB[0]=256;
        BOUND_CHECK$(post_peker$LB[0],post_peker$UB[0]);
        post_peker=new ARRAY$<HegnaNRK$PBLK21$post[]>(new HegnaNRK$PBLK21$post[post_peker$UB[0]-post_peker$LB[0]+1],post_peker$LB,post_peker$UB);
        int[] divisor$LB=new int[1]; int[] divisor$UB=new int[1];
        divisor$LB[0]=1; divisor$UB[0]=20;
        BOUND_CHECK$(divisor$LB[0],divisor$UB[0]);
        divisor=new ARRAY$<int[]>(new int[divisor$UB[0]-divisor$LB[0]+1],divisor$LB,divisor$UB);
        int[] egenskap$LB=new int[1]; int[] egenskap$UB=new int[1];
        egenskap$LB[0]=1; egenskap$UB[0]=20;
        BOUND_CHECK$(egenskap$LB[0],egenskap$UB[0]);
        egenskap=new ARRAY$<TXT$[]>(new TXT$[egenskap$UB[0]-egenskap$LB[0]+1],egenskap$LB,egenskap$UB);
    }
    public HegnaNRK$PBLK21 STM$() {
        kommando_tabell.Elt[1-kommando_tabell.LB[0]]=new TXT$("KONTAKT");
        kommando_tabell.Elt[2-kommando_tabell.LB[0]]=new TXT$("SKRIV");
        kommando_tabell.Elt[3-kommando_tabell.LB[0]]=new TXT$("Sï¿½K");
        kommando_tabell.Elt[4-kommando_tabell.LB[0]]=new TXT$("ENDRE");
        kommando_tabell.Elt[5-kommando_tabell.LB[0]]=new TXT$("TRYKK");
        kommando_tabell.Elt[6-kommando_tabell.LB[0]]=new TXT$("FJERN");
        kommando_tabell.Elt[7-kommando_tabell.LB[0]]=new TXT$("HJELP");
        kommando_tabell.Elt[8-kommando_tabell.LB[0]]=new TXT$("LIST");
        kommando_tabell.Elt[9-kommando_tabell.LB[0]]=new TXT$("LISTDEF");
        kommando_tabell.Elt[10-kommando_tabell.LB[0]]=new TXT$("NESTE");
        kommando_tabell.Elt[11-kommando_tabell.LB[0]]=new TXT$("HENT");
        kommando_tabell.Elt[12-kommando_tabell.LB[0]]=new TXT$("DATAREG");
        kommando_tabell.Elt[13-kommando_tabell.LB[0]]=new TXT$("DEFFORMAT");
        kommando_tabell.Elt[14-kommando_tabell.LB[0]]=new TXT$("RAPPORTER");
        kommando_tabell.Elt[15-kommando_tabell.LB[0]]=new TXT$("TAINN");
        kommando_tabell.Elt[16-kommando_tabell.LB[0]]=new TXT$("LEGGUT");
        kommando_tabell.Elt[17-kommando_tabell.LB[0]]=new TXT$("FINNMENGDE");
        kommando_tabell.Elt[18-kommando_tabell.LB[0]]=new TXT$("SORTERMENGDE");
        kommando_tabell.Elt[19-kommando_tabell.LB[0]]=new TXT$("RAPPORTERMENGDE");
        max_kommando$1=20;
        kommando_tabell.Elt[max_kommando$1-kommando_tabell.LB[0]]=new TXT$("SLUTT");
        quit_kommando$1=max_kommando$1;
        type_tabell.Elt[1-type_tabell.LB[0]]='H';
        type_tabell.Elt[2-type_tabell.LB[0]]='T';
        max_type$1=3;
        type_tabell.Elt[max_type$1-type_tabell.LB[0]]='.';
        max_felt_def$1=(16+(1));
        antall_felt_def$1=1;
        feltnavn_tabell.Elt[antall_felt_def$1-feltnavn_tabell.LB[0]]=new TXT$(".");
        felttype_tabell.Elt[antall_felt_def$1-felttype_tabell.LB[0]]=max_type$1;
        quit_felt$1=antall_felt_def$1;
        felt_antall$1=0;
        max_intern_felt$1=16;
        max_finne_regel$1=8;
        finne_regel_antall$1=0;
        antall_poster$1=0;
        max_antall_poster$1=256;
        max_format_def$1=8;
        max_format_lengde$1=16;
        antall_format_def$1=0;
        aktuell$1=0;
        eot$1=((char)39);
        skjerm_image_lengde$1=78;
        navne_lengde$1=30;
        tekst_lengde$1=180;
        fil_image_lengde$1=80;
        default_file_type$1=new TXT$(":SYMB");
        mengde$1=null;
        divisor.Elt[1-divisor.LB[0]]=1;
        divisor.Elt[2-divisor.LB[0]]=17;
        divisor.Elt[3-divisor.LB[0]]=2;
        divisor.Elt[4-divisor.LB[0]]=3;
        divisor.Elt[5-divisor.LB[0]]=11;
        divisor.Elt[6-divisor.LB[0]]=1;
        divisor.Elt[7-divisor.LB[0]]=3;
        divisor.Elt[8-divisor.LB[0]]=4;
        divisor.Elt[9-divisor.LB[0]]=2;
        divisor.Elt[10-divisor.LB[0]]=10;
        divisor.Elt[11-divisor.LB[0]]=1;
        new HegnaNRK$PBLK21$main(((HegnaNRK$PBLK21)CUR$));
        EBLK();
        return(this);
    }
    
    public static void main(String[] args) {
        RT.setRuntimeOptions(args);
        new HegnaNRK$PBLK21(CTX$).STM$();
    }
    public static PROGINFO$ INFO$=new PROGINFO$("HegnaNRK.sim","PrefixedBlock HegnaNRK$PBLK21",1,21,10,22,12,23,14,24,16,27,18,28,20,29,22,30,24,31,27,32,29,35,32,36,34,39,36,40,38,43,41,44,43,45,45,46,47,47,49,48,52,49,56,227,59,228,61,229,63,232,66,233,68,234,70,235,72,236,74,239,77,240,79,241,81,244,83,245,86,246,88,249,90,255,93,256,95,613,97,614,99,615,101,616,106,36,111,40,116,45,121,46,126,49,135,228,140,229,145,234,150,235,155,236,160,240,165,241,170,256,175,615,180,616,187,1454,189,1455,191,1456,193,1457,195,1458,197,1459,199,1460,201,1461,203,1462,205,1463,207,1464,209,1465,211,1466,213,1467,215,1468,217,1469,219,1470,221,1471,223,1472,225,1473,227,1474,229,1475,231,1478,233,1479,235,1480,237,1481,239,1484,241,1485,243,1486,245,1487,247,1488,249,1491,251,1492,253,1495,255,1496,257,1499,259,1500,261,1503,263,1504,265,1505,267,1508,269,1509,271,1510,273,1511,275,1512,277,1513,279,1514,281,1515,283,1516,285,1517,287,1518,289,1519,291,1520,293,1521,295,1522,297,1523,299,1524,301,1525,303,1526,305,1528,314,1529);
}
