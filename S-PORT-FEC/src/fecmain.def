% Procedure FECMAIN;
%      -----------------------------------------------------------------------
%      ---                                                                 ---
%      ---  COPYRIGHT 1985,86 by                                           ---
%      ---  Simula a.s.                                                    ---
%      ---  Oslo, Norway                                                   ---
%      ---                                                                 ---
%      ---                                                                 ---
%      ---                                                                 ---
%      ---                                                                 ---
%      ---                 P O R T A B L E     S I M U L A                 ---
%      ---                                                                 ---
%      ---              F R O N T - E N D    C O M P I L E R               ---
%      ---                                                                 ---
%      ---                                                                 ---
%      ---                                                                 ---
%      ---                    M a i n   P r o g r a m                      ---
%      ---                                                                 ---
%      ---                     R e l e a s e    105                        ---
%      ---                                                                 ---
%      ---                                                                 ---
%      ---                                                                 ---
%      -----------------------------------------------------------------------
begin External class SCODMAIN;
      short integer maxid,maxblev,maxblno;
      !*** parameters to class COMMON ***;

%+I %INSERT (FEC-105)COMMON:MNE

%-Z   maxid:=    getintinfo(36); if maxid   <=0  then maxid   :=3500;
%-Z   maxblno:=  getintinfo(38); if maxblno <=0  then maxblno :=1400 else
%-Z                              if maxblno>31999 then maxblno:=31999;
%-Z   maxblev:=  getintinfo(39); if maxblev <=0  then !TEMP;
%-Z   maxblev:=  getintinfo(21); if maxblev <=50 then maxblev :=  50 else
%-Z                              if maxblev>250  then maxblev := 250;

%-Z SCODMAIN( maxid,maxblno,maxblev )
%+Z SCODMAIN( 3500 , 1400  ,  50    )
begin
      integer numberoflines;
      text L2NAME;
      text nscodename;

      procedure ENDCOMP; goto FINI;

%     ******   R e a d  C o m p i l e r   P a r a m e t e r s   ******

      termstatus:='3';
      begin
            character c; text t; short integer i;
            datetime:-date_time; !sepcomplev:=1;  !NOTE -not used elsewhere;
            recomp:=getintinfo(22)=1;
%           recomp must be set here before source input is started
            L2NAME:-gettextinfo(7);
            nscodename:-gettextinfo(4);
            progheadstring:-gettextinfo(13);
            maxerrno:=getintinfo(4);
            GiveNotes:= getintinfo(5)=0;
            simob_level:=getintinfo(30);
            simob_descr:=  simob_level>0;
            simob_entity:= simob_level=2;
            predefname:-gettextinfo(19);
            simsetname:-gettextinfo(20); simulaname:-gettextinfo(21);

            !*** Form full program head string ***;
            i:=progheadstring.length; t:-blanks(37+i);
            t.sub(1,23):=datetime.sub(1,23);
            t.sub(24,14):="'SIMULA xxxxA'"; t.sub(32,4).putint(RELEASE);
            t.sub(38,i):=progheadstring; progheadstring:-t;
      end;

%     *************   P  A  S  S    1   ****************

      numberoflines := Pass1(L2NAME);

%     *************   P  A  S  S    2   ****************

      begin short integer lowindtag,maxmodules,maxcalldepth;
            short integer maxjumpdepth,max_index,maxasd;
            lowindtag:=    1200;  ! getintinfo(??); ! Highest tag in RTS;
            maxmodules:=     40;  ! getintinfo(??);
            maxcalldepth:=   15;  ! getintinfo(??);
            maxjumpdepth:=  100;  ! getintinfo(??);
            max_index:=     100;  ! getintinfo(??);
            maxasd:=         30;  ! getintinfo(??);

            opt:=opd:=opn:=0;
            blocktab :- new blockref(nextblno-1);

            currentpass:='2';
            setoptions;
            dumgen:-new dummygenerator;
            if numerrfound>0 or nscodename==notext or definition !%DEFINITION;
            then coder:-dumgen
            else begin
                 SCF:-new outbytefile(nscodename);
                 if not SCF.open then openerror(nscodename);
                 coder:-new codegenerator(-lowindtag,maxmodules,maxcalldepth,
                                                maxjumpdepth,max_index,maxasd);
            end;
            builderinit;  !initialize low display etc. ;
            L2INPT:-new inbytefile(L2NAME);
            if not L2INPT.open then openerror(L2NAME);
            checkerinit; call(checker);
      end pass2;

FINI:
      if coder==dumgen and!then; termstatus<'3' then termstatus:='3';
      if numerrfound > 0 then
      begin outimage; outtext("   NUMBER OF ERRORS:   ");
            outint(numerrfound,4); outimage;
            if termstatus<'4' then termstatus:='4';
      end;
      if numwarnfound>0 then
      begin outtext("   NUMBER OF WARNINGS: ");
            outint(numwarnfound,4); outimage;
      end;

      ClosePass1;

            if SCF=/=none then SCF.close;
            if L2INPT=/=none then L2INPT.close;
            if EIF=/=none then EIF.close;
            if EOF=/=none then EOF.close;
            if OAF=/=none then OAF.close;

      ! NOW: termstatus=0 means normal running, and S-code completed,
             termstatus=3 means normal running, but S-code not produced,
             termstatus=4 means running, but errors found
             termstatus=5 means term by testincerr or the like,
             termstatus=6 means term by internerr ;

      giveintinfo(2,maxnumoftags);  giveintinfo(3,numberoflines);
      giveintinfo(4,numerrfound);   giveintinfo(5,numwarnfound);
      giveintinfo(1,rank(termstatus)-rank('0'));
end COMMON-block;
end of FECMAIN;

